{"ast":null,"code":"import axiosInstance from \"../helpers/axios\";\nimport axios from \"../helpers/axios\";\nimport { authConstants, userConstants } from \"./constants\";\nexport const login = user => {\n  console.log(user);\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post(\"/admin/signin\", { ...user\n    });\n\n    if (res.status === 201) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n  };\n};\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: {\n          error: \"Error failed to retreive!...\"\n        }\n      });\n    }\n  };\n};\nexport const signout = () => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGOUT_REQUEST\n    });\n    const res = await axios.post(\"/admin/signout\", {\n      headers: axiosInstance.headers\n    });\n\n    if (res.status === 200) {\n      localStorage.clear();\n      dispatch({\n        type: authConstants.LOGOUT_SUCCESS\n      });\n    } else {\n      // console.log(res.data.error);\n      dispatch({\n        type: authConstants.LOGOUT_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/Anupam/Downloads/syntup/syntup/admin/src/actions/auth.js"],"names":["axiosInstance","axios","authConstants","userConstants","login","user","console","log","dispatch","type","LOGIN_REQUEST","res","post","status","token","data","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","LOGIN_FAILURE","error","isUserLoggedIn","getItem","parse","signout","LOGOUT_REQUEST","headers","clear","LOGOUT_SUCCESS","LOGOUT_FAILURE"],"mappings":"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","sourcesContent":["import axiosInstance from \"../helpers/axios\";\r\nimport axios from \"../helpers/axios\";\r\nimport { authConstants, userConstants } from \"./constants\";\r\n\r\nexport const login = (user) => {\r\n  console.log(user);\r\n  return async (dispatch) => {\r\n    dispatch({ type: authConstants.LOGIN_REQUEST });\r\n    const res = await axios.post(\"/admin/signin\", {\r\n      ...user,\r\n    });\r\n\r\n    if (res.status === 201) {\r\n      const { token, user } = res.data;\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n      dispatch({\r\n        type: authConstants.LOGIN_SUCCESS,\r\n        payload: {\r\n          token,\r\n          user,\r\n        },\r\n      });\r\n    } else {\r\n      if (res.status === 400) {\r\n        dispatch({\r\n          type: authConstants.LOGIN_FAILURE,\r\n          payload: {\r\n            error: res.data.error,\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const isUserLoggedIn = () => {\r\n  return async (dispatch) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      dispatch({\r\n        type: authConstants.LOGIN_SUCCESS,\r\n        payload: {\r\n          token,\r\n          user,\r\n        },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: authConstants.LOGIN_FAILURE,\r\n        payload: {\r\n          error: \"Error failed to retreive!...\",\r\n        },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const signout = () => {\r\n  return async (dispatch) =>{\r\n    dispatch({ type: authConstants.LOGOUT_REQUEST});\r\n    const res = await axios.post(\"/admin/signout\", {headers: axiosInstance.headers});\r\n    if(res.status === 200){\r\n      localStorage.clear();\r\n      dispatch({type: authConstants.LOGOUT_SUCCESS});\r\n\r\n    } else{\r\n      // console.log(res.data.error);\r\n      dispatch({ type: authConstants.LOGOUT_FAILURE,\r\n                payload: {error: res.data.error},\r\n      });\r\n    \r\n    }\r\n  }; \r\n};"]},"metadata":{},"sourceType":"module"}